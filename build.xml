<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Copyright (c) Members of the EGEE Collaboration. 2007.
    See http://www.eu-egee.org/partners/ for details on the copyright
    holders.
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
          http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    ETICS build for org.glite.slcs.common

    Author: Valery Tschopp <tschopp@switch.ch>
    Version: $Id: build.xml,v 1.14 2007/07/26 14:04:12 vtschopp Exp $
-->
<project name="org.glite.slcs.common" default="stage" basedir=".">

    <!-- workspace directories -->
    <property name="workspace.dir" location=".." />
    <property name="stage.dir" location="${workspace.dir}/stage" />
    <property name="stage.lib.dir" location="${stage.dir}/share/java" />

    <!-- ETICS externals defs -->
    <import file="project/etics-externals.xml" />

    <!-- local properties -->
    <property file="build.properties" />

    <!-- local dirs -->
    <property name="src.dir" location="${basedir}/src" />
    <property name="doc.dir" location="${basedir}/doc" />
    <property name="test.src.dir" location="${basedir}/test" />

    <!-- build dirs -->
    <property name="build.dir" location="${basedir}/build" />
    <property name="classes.dir" location="${build.dir}/classes" />
    <property name="javadoc.dir" location="${build.dir}/javadoc" />
    <property name="test.classes.dir" location="${build.dir}/test/classes" />

    <property name="install.dir" location="${build.dir}/glite" />

    <!-- init -->
    <target name="init" depends="">
        <tstamp />
        <!-- libraries from ETICS repository -->
        <path id="compile.path">
            <pathelement path="${classes.dir}" />
            <path refid="ext.bouncycastle.bcprov.path" />
            <path refid="ext.commons-codec.path" />
            <path refid="ext.commons-collections.path" />
            <path refid="ext.commons-configuration.path" />
            <path refid="ext.commons-httpclient.path" />
            <path refid="ext.commons-lang.path" />
            <path refid="ext.commons-logging.path" />
        </path>
        <path id="test.path">
            <path refid="compile.path" />
            <pathelement path="${test.classes.dir}" />
            <path refid="ext.junit.path" />
            <path refid="ext.log4j.path" />
        </path>
    </target>

    <!-- prepare -->
    <target name="prepare" depends="init">
        <mkdir dir="${classes.dir}" />
        <mkdir dir="${test.classes.dir}" />
    </target>

    <!-- compile -->
    <target name="compile" depends="prepare">
        <echo message="compile..." />
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${src.dir}" debug="true" destdir="${classes.dir}">
            <classpath refid="compile.path" />
        </javac>
    </target>

    <!-- compile -->
    <target name="test.compile" depends="compile">
        <echo message="compile..." />
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${test.src.dir}" debug="true" destdir="${test.classes.dir}">
            <classpath refid="test.path" />
        </javac>
        <copy file="${test.src.dir}/log4j.properties" todir="${test.classes.dir}" failonerror="false"/>
    </target>

    <!-- test -->
    <target name="test" depends="test.compile">
        <echo message="test..." />
        <junit printsummary="yes" showoutput="yes" fork="yes">
            <classpath refid="test.path" />
            <batchtest>
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit> 
    </target>

    <!-- jar -->
    <target name="jar" depends="compile">
        <!-- jar all classes -->
        <jar jarfile="${build.dir}/${package.name}.jar" basedir="${classes.dir}" />
    </target>

    <!-- javadoc -->
    <target name="javadoc">
        <echo message="javadoc..." />
        <javadoc packagenames="org.glite.slcs.*" sourcepath="${src.dir}" destdir="${javadoc.dir}" />
    </target>



    <!-- prepare install layout -->
    <target name="install-layout" depends="jar">
        <echo message="prepare install in ${install.dir}" />

        <property name="install.lib.dir" location="${install.dir}/share/java" />
        <property name="install.doc.dir" location="${install.dir}/share/doc/${package.name}" />
        <property name="install.javadoc.dir" location="${install.doc.dir}/api" />

        <!-- create install dirs -->
        <mkdir dir="${install.lib.dir}" />
        <mkdir dir="${install.javadoc.dir}" />

        <!-- copy jar file -->
        <copy file="${build.dir}/${package.name}.jar" todir="${install.lib.dir}" />

        <!-- doc -->
        <copy todir="${install.doc.dir}">
            <fileset dir="${doc.dir}" />
        </copy>
        <!-- javadoc -->
        <copy todir="${install.javadoc.dir}" failonerror="false">
            <fileset dir="${javadoc.dir}" />
        </copy>

    </target>

    <!-- stage in ../stage dir -->
    <target name="stage" depends="install-layout">
        <echo message="stage in ${stage.dir}" />
        <copy todir="${stage.dir}">
            <fileset dir="${install.dir}" />
        </copy>
    </target>

    <!-- install used by ETICS packager: ant -Dprefix=${prefix} install -->
    <target name="install" depends="install-layout">
        <echo message="install in ${prefix}" />
        <copy todir="${prefix}">
            <fileset dir="${install.dir}" />
        </copy>
    </target>
    
    <!-- clean -->
    <target name="clean">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build.dir}" failonerror="false" />
        <delete dir="${install.dir}" failonerror="false" />
        <!-- etics build system clean up -->
        <delete dir="RPMS" failonerror="false" />
        <delete dir="tgz" failonerror="false" />
        <delete dir="rpmbuild" failonerror="false" />
    </target>
    
    <!-- download eternals dependencies in local repository -->
    <target name="repository" depends="init">
       <download-ext external="ext.bouncycastle" />
       <download-ext external="ext.commons-codec" />
       <download-ext external="ext.commons-collections" />
       <download-ext external="ext.commons-configuration" />
       <download-ext external="ext.commons-httpclient" />
       <download-ext external="ext.commons-lang" />
       <download-ext external="ext.commons-logging" />
       <download-ext external="ext.junit" />
       <download-ext external="ext.log4j" />
    </target>
       
</project>
